"tensor([1., 1.])","tensor([13.8698], dtype=torch.float64)"
"tensor([0.9158, 0.8074])","tensor([40.2277], dtype=torch.float64)"
"tensor([1., 1.])","tensor([49.6940], dtype=torch.float64)"
"tensor([0.9393, 0.9943])","tensor([27.7375], dtype=torch.float64)"
"tensor([0.8883, 0.9927])","tensor([29.5441], dtype=torch.float64)"
"tensor([0.9480, 0.9429])","tensor([11.4986], dtype=torch.float64)"
"tensor([0.9452, 0.9221])","tensor([15.8808], dtype=torch.float64)"
"tensor([0.9086, 0.9145])","tensor([21.3813], dtype=torch.float64)"
"tensor([0.9876, 0.8208])","tensor([27.3363], dtype=torch.float64)"
"tensor([0.9707, 0.9046])","tensor([39.7434], dtype=torch.float64)"
"tensor([0.9292, 0.9347])","tensor([9.5147], dtype=torch.float64)"
"tensor([0.9481, 0.9388])","tensor([35.5885], dtype=torch.float64)"
"tensor([0.8995, 0.9357])","tensor([40.3452], dtype=torch.float64)"
"tensor([0.9266, 0.9014])","tensor([14.4758], dtype=torch.float64)"
"tensor([0.9340, 0.8952])","tensor([51.6955], dtype=torch.float64)"
"tensor([0.9584, 0.9648])","tensor([51.4636], dtype=torch.float64)"
"tensor([0.8600, 0.8768])","tensor([36.3373], dtype=torch.float64)"
"tensor([0.8007, 0.9922])","tensor([24.4823], dtype=torch.float64)"
"tensor([0.8005, 0.9530])","tensor([17.5841], dtype=torch.float64)"
"tensor([0.8231, 0.9297])","tensor([10.2266], dtype=torch.float64)"
"tensor([0.8251, 0.9573])","tensor([30.4034], dtype=torch.float64)"
"tensor([0.8243, 0.9082])","tensor([25.9080], dtype=torch.float64)"
"tensor([0.8045, 0.9217])","tensor([6.5837], dtype=torch.float64)"
